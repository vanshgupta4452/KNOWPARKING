import cv2

# Open the video file or camera
cap = cv2.VideoCapture(2)

while True:
    # Read the frame from the video or camera
    ret, frame = cap.read()
    # cv2.imshow('Original Frame', frame)

    # Break the loop if the video is finished or the camera is closed
    if not ret:
        break

    # Convert the frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Find contours in the grayscale frame
    contours, _ = cv2.findContours(gray, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    # Get the bounding box for the first contour
    x, y, w, h = cv2.boundingRect(contours[0])

    # Calculate the centroid of the bounding box
    centroid_x = x + w / 2
    centroid_y = y + h / 2

    # Print the x-min, y-min, x-max, and y-max values
    print("x-min:", x)
    print("y-min:", y)
    print("x-max:", x + w)
    print("y-max:", y + h)
    print("Centroid:", (centroid_x, centroid_y))

    # Display the frame
    cv2.imshow('Frame', frame)

    # Break the loop if the 'q' key is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video file or camera and close all windows
cap.release()
cv2.destroyAllWindows()